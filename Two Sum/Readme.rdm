1Q. Given an unsorted list and a number ,
 find all the pairs of numbers in that list such that their sum equals target number. 
 
 For example, if the list is [3, 5, 2, -4, 8, 11]
[3,5,2,−4,8,11] and the value of target number is 7
,then the program should return pairs
location in give list (5,3)
(11,−4)




class Two_sum() :
    # let define a funcation in a give methods that sums two number and find the target number
    def twosum(nums, target): 
        # search other element in the array.
        for i in range (len(nums)):
            # search other element in the array.
            for j in range(i+2,len(nums)):
                # if these two element sum is equal two the target number then prints that numbers
                if nums[i] +nums[j] == target :
                    print("target with sum",target, "is:(", nums[i],",",nums[j],")")
    # this is driver code
    nums =[3,5,2,-4,8,11]         
    target = 7
    # Function call  inside print
    twosum (nums,target)   
```








2. Solution part 2 





class Solution()
def twoSumHashing(num_arr, pair_sum):
    sums = []
    # Initialize an empty hash table.
    hashTable = {}

    for i in range(len(num_arr)):
        # Calculate the complement by subtracting the current list element from the given number
        complement = pair_sum - num_arr[i]
        # Look up the complement in the hash table. If it exists, a pair that sums up to the given number has been found.
        if complement in hashTable:
            print("Pair with sum", pair_sum,"is: (", num_arr[i],",",complement,")")
        # Insert the current element of the array into the hash table after you perform the step above.    
        hashTable[num_arr[i]] = num_arr[i]

# Driver Code
num_arr = [4, 5, 1, 8]
pair_sum = 9    
  
# Calling function
twoSumHashing(num_arr, pair_sum)
